services:
  t_base:
    container_name: t_base
    build: .
    ports:
      - 80:80
    command: bash -c "gunicorn --workers=3 -b 0.0.0.0:80 -k uvicorn.workers.UvicornWorker main:app"
    environment:
      APP_NAME: "t_base"
    depends_on:
      db:
        condition: service_healthy
      celery:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./db-init-scripts:/docker-entrypoint-initdb.d
    env_file: .env_prod
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_MULTIPLE_DATABASES=${POSTGRES_TEST_DB},${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "${POSTGRES_PORT}:5432"

  celery:
    build: .
    command: celery -A utils.celery_tasks:celery worker --loglevel=info --logfile=logs/celery.log
    volumes:
      - ./:/app
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    env_file: .env_prod
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - ./redis_utils/data:/data
    expose:
      - 6379
    command: redis-server --requirepass $REDIS_PASSWORD

  rabbitmq:
    image: 'rabbitmq:latest'
    ports:
      - '5672:5672'
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
volumes:
  postgres_data:

